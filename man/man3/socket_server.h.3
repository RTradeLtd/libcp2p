.TH "/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/network/socket_server.h" 3 "Wed Jul 22 2020" "libcp2p" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/network/socket_server.h \- used to create a tcp/udp socket server listening on multiaddrs  

.SH SYNOPSIS
.br
.PP
\fC#include 'multiaddr/multiaddr\&.h'\fP
.br
\fC#include 'network/socket_client\&.h'\fP
.br
\fC#include 'utils/logger\&.h'\fP
.br
\fC#include 'utils/thread_pool\&.h'\fP
.br
\fC#include <arpa/inet\&.h>\fP
.br
\fC#include <netinet/in\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br
\fC#include <stdbool\&.h>\fP
.br
\fC#include <sys/socket\&.h>\fP
.br
\fC#include <sys/time\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBsocket_server_config\fP"
.br
.ti -1c
.RI "struct \fBsocket_server\fP"
.br
.ti -1c
.RI "struct \fBclient_conn\fP"
.br
.RI "a structure containing a file descriptor and address information "
.ti -1c
.RI "struct \fBconn_handle_data\fP"
.br
.RI "struct containing arguments passed into pthread "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMAX_ADDRS\fP   100"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void() \fBthreadpool_task_func\fP(void *data)"
.br
.RI "defines a function signature that is used for submitting tasks to our thread pool "
.ti -1c
.RI "typedef struct \fBsocket_server_config\fP \fBsocket_server_config_t\fP"
.br
.RI "used for configuring a socket_server_t instance "
.ti -1c
.RI "typedef struct \fBsocket_server\fP \fBsocket_server_t\fP"
.br
.RI "a TCP/UDP socket server "
.ti -1c
.RI "typedef struct \fBclient_conn\fP \fBclient_conn_t\fP"
.br
.ti -1c
.RI "typedef struct \fBconn_handle_data\fP \fBconn_handle_data_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBsocket_server_t\fP * \fBnew_socket_server\fP (\fBthread_logger\fP *thl, \fBsocket_server_config_t\fP config)"
.br
.RI "used to create a TCP/UDP socket server ready to accept connections "
.ti -1c
.RI "\fBclient_conn_t\fP * \fBaccept_client_conn\fP (\fBsocket_server_t\fP *srv, int socket_num)"
.br
.RI "helper function for accepting client connections times out new attempts if they take 3 seconds or more "
.ti -1c
.RI "void \fBfree_socket_server\fP (\fBsocket_server_t\fP *srv)"
.br
.RI "terminates a server and frees up resources associated with it "
.ti -1c
.RI "void \fBstart_socket_server\fP (\fBsocket_server_t\fP *srv)"
.br
.RI "starts the socket server which processes new connections "
.ti -1c
.RI "void * \fBaccept_connections\fP (void *data)"
.br
.RI "dedicated function for accepting and handling new connections "
.ti -1c
.RI "void \fBsignal_shutdown\fP ()"
.br
.RI "used to signal that we should exit the main start_socket_server function "
.ti -1c
.RI "void \fBfree_socket_server_config\fP (\fBsocket_server_config_t\fP *config)"
.br
.RI "used to free up resources allocated for socket_server_config_t "
.ti -1c
.RI "\fBsocket_server_config_t\fP * \fBnew_socket_server_config\fP ()"
.br
.RI "used to initialize a socket_server_config_t object "
.in -1c
.SH "Detailed Description"
.PP 
used to create a tcp/udp socket server listening on multiaddrs 


.PP
Definition in file \fBsocket_server\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define MAX_ADDRS   100"

.PP
Definition at line 31 of file socket_server\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBclient_conn\fP \fBclient_conn_t\fP"

.SS "typedef struct \fBconn_handle_data\fP \fBconn_handle_data_t\fP"

.SS "\fBsocket_server_config_t\fP"

.PP
used for configuring a socket_server_t instance 
.PP
\fBTodo\fP
.RS 4
switch to multi_addresses 
.RE
.PP

.SS "\fBsocket_server_t\fP"

.PP
a TCP/UDP socket server provides a thread pool can be used for handling new connections 
.PP
\fBTodo\fP
.RS 4
dont limit to two sockets (this will requiring using multiaddrs and an array of socket numbers) 
.RE
.PP

.SS "typedef void() threadpool_task_func(void *data)"

.PP
defines a function signature that is used for submitting tasks to our thread pool 
.PP
Definition at line 37 of file socket_server\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBclient_conn_t\fP* accept_client_conn (\fBsocket_server_t\fP * srv, int socket_num)"

.PP
helper function for accepting client connections times out new attempts if they take 3 seconds or more 
.PP
\fBReturns\fP
.RS 4
Failure: NULL client conn failed 
.PP
Success: non-NULL populated \fBclient_conn\fP object 
.RE
.PP

.PP
Definition at line 376 of file socket_server\&.c\&.
.SS "void* accept_connections (void * data)"

.PP
dedicated function for accepting and handling new connections 
.PP
\fBNote\fP
.RS 4
processes new connections by launching them 
.RE
.PP

.SS "void free_socket_server (\fBsocket_server_t\fP * srv)"

.PP
terminates a server and frees up resources associated with it 
.PP
Definition at line 237 of file socket_server\&.c\&.
.SS "void free_socket_server_config (\fBsocket_server_config_t\fP * config)"

.PP
used to free up resources allocated for socket_server_config_t 
.PP
\fBParameters\fP
.RS 4
\fIconfig\fP an instance of socket_server_config_t initialized with new_socket_server_config 
.RE
.PP

.PP
Definition at line 406 of file socket_server\&.c\&.
.SS "\fBsocket_server_t\fP* new_socket_server (\fBthread_logger\fP * thl, \fBsocket_server_config_t\fP config)"

.PP
used to create a TCP/UDP socket server ready to accept connections 
.PP
\fBParameters\fP
.RS 4
\fIthl\fP an instance of a \fBthread_logger\fP 
.br
\fIconfig\fP the configuration settings used for the tcp/udp server 
.RE
.PP
\fBReturns\fP
.RS 4
Success: pointer to a socket_server_t instance 
.PP
Failure: NULL pointer 
.RE
.PP

.PP
\fBWarning\fP
.RS 4
support non wildcard 
.RE
.PP
\fBTodo\fP
.RS 4
support non wildcard 
.RE
.PP
.PP
\fBWarning\fP
.RS 4
support non wildcard 
.RE
.PP
\fBTodo\fP
.RS 4
support non wildcard 
.RE
.PP

.PP
Definition at line 52 of file socket_server\&.c\&.
.SS "\fBsocket_server_config_t\fP* new_socket_server_config ()"

.PP
used to initialize a socket_server_config_t object 
.PP
\fBParameters\fP
.RS 4
\fInum_addrs\fP the number of multi_addr_t objects the addrs member will contain 
.RE
.PP
\fBReturns\fP
.RS 4
Success: pointer to an initialized block of memory for socket_server_config_t 
.PP
Failure: NULL pointer 
.RE
.PP

.SS "void signal_shutdown ()"

.PP
used to signal that we should exit the main start_socket_server function 
.PP
\fBNote\fP
.RS 4
this is only useful if you launch start_socket_server in a thread 
.RE
.PP

.PP
Definition at line 365 of file socket_server\&.c\&.
.SS "void start_socket_server (\fBsocket_server_t\fP * srv)"

.PP
starts the socket server which processes new connections when a new connection is accepted (tcp) OR we can receive data on a udp socket, the given handle_conn_func is used to process that client connection 
.PP
\fBParameters\fP
.RS 4
\fIsrv\fP an instance of a socket_server_t that has been initialized through new_socket_server 
.br
\fIfn_tcp\fP 
.br
\fIfn_udp\fP when a new connection is accepted (tcp) OR we can receive data on a udp socket, the given handle_conn_func is used to process that client connection 
.br
\fIsrv\fP an instance of a socket_server_t that has been initialized through new_socket_server 
.RE
.PP

.PP
\fBTodo\fP
.RS 4
enable customizable timeout 
.RE
.PP
.PP
.IP "\(bu" 2
\fBNote\fP
.RS 4
copy the main socket list containing both tcp and udp sockets
.RE
.PP
iterate over all known sockets 
.PP
\fBNote\fP
.RS 4
this will likely search a few extra sockets, but the overhead should be neglibie
.RE
.PP

.PP

.PP
Definition at line 263 of file socket_server\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for libcp2p from the source code\&.
