.TH "arg_hdr" 3 "Sun Aug 2 2020" "libcp2p" \" -*- nroff -*-
.ad l
.nh
.SH NAME
arg_hdr
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <argtable3\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "char \fBflag\fP"
.br
.ti -1c
.RI "const char * \fBshortopts\fP"
.br
.ti -1c
.RI "const char * \fBlongopts\fP"
.br
.ti -1c
.RI "const char * \fBdatatype\fP"
.br
.ti -1c
.RI "const char * \fBglossary\fP"
.br
.ti -1c
.RI "int \fBmincount\fP"
.br
.ti -1c
.RI "int \fBmaxcount\fP"
.br
.ti -1c
.RI "void * \fBparent\fP"
.br
.ti -1c
.RI "\fBarg_resetfn\fP * \fBresetfn\fP"
.br
.ti -1c
.RI "\fBarg_scanfn\fP * \fBscanfn\fP"
.br
.ti -1c
.RI "\fBarg_checkfn\fP * \fBcheckfn\fP"
.br
.ti -1c
.RI "\fBarg_errorfn\fP * \fBerrorfn\fP"
.br
.ti -1c
.RI "void * \fBpriv\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 96 of file argtable3\&.h\&.
.SH "Field Documentation"
.PP 
.SS "\fBarg_checkfn\fP* arg_hdr::checkfn"

.PP
Definition at line 108 of file argtable3\&.h\&.
.SS "const char* arg_hdr::datatype"

.PP
Definition at line 100 of file argtable3\&.h\&.
.SS "\fBarg_errorfn\fP* arg_hdr::errorfn"

.PP
Definition at line 109 of file argtable3\&.h\&.
.SS "char arg_hdr::flag"

.PP
Definition at line 97 of file argtable3\&.h\&.
.SS "const char* arg_hdr::glossary"

.PP
Definition at line 101 of file argtable3\&.h\&.
.SS "const char* arg_hdr::longopts"

.PP
Definition at line 99 of file argtable3\&.h\&.
.SS "int arg_hdr::maxcount"

.PP
Definition at line 104 of file argtable3\&.h\&.
.SS "int arg_hdr::mincount"

.PP
Definition at line 103 of file argtable3\&.h\&.
.SS "void* arg_hdr::parent"

.PP
Definition at line 105 of file argtable3\&.h\&.
.SS "void* arg_hdr::priv"

.PP
Definition at line 110 of file argtable3\&.h\&.
.SS "\fBarg_resetfn\fP* arg_hdr::resetfn"

.PP
Definition at line 106 of file argtable3\&.h\&.
.SS "\fBarg_scanfn\fP* arg_hdr::scanfn"

.PP
Definition at line 107 of file argtable3\&.h\&.
.SS "const char* arg_hdr::shortopts"

.PP
Definition at line 98 of file argtable3\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for libcp2p from the source code\&.
