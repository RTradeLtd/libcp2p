.TH "/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/multiaddr/multiaddr.h" 3 "Sat Aug 8 2020" "libcp2p" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/multiaddr/multiaddr.h
.SH SYNOPSIS
.br
.PP
\fC#include <string\&.h>\fP
.br
\fC#include 'protocols\&.h'\fP
.br
\fC#include 'protoutils\&.h'\fP
.br
\fC#include 'utils/varhexutils\&.h'\fP
.br
\fC#include 'utils/varint\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBmulti_address\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBmulti_address\fP \fBmulti_addr_t\fP"
.br
.RI "a structure composing a multiaddress "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBstrpos\fP (char *haystack, char *needle)"
.br
.ti -1c
.RI "struct \fBmulti_address\fP * \fBmulti_address_new_from_bytes\fP (const uint8_t *byteaddress, int size)"
.br
.ti -1c
.RI "struct \fBmulti_address\fP * \fBmulti_address_new_from_string\fP (const char *straddress)"
.br
.ti -1c
.RI "void \fBmulti_address_free\fP (struct \fBmulti_address\fP *in)"
.br
.ti -1c
.RI "struct \fBmulti_address\fP * \fBmulti_address_copy\fP (const struct \fBmulti_address\fP *source)"
.br
.ti -1c
.RI "int \fBmulti_address_encapsulate\fP (struct \fBmulti_address\fP *result, char *string)"
.br
.ti -1c
.RI "int \fBmulti_address_decapsulate\fP (struct \fBmulti_address\fP *result, char *srci)"
.br
.ti -1c
.RI "int \fBmulti_address_is_ip\fP (const struct \fBmulti_address\fP *in)"
.br
.ti -1c
.RI "int \fBmulti_address_is_ip4\fP (const struct \fBmulti_address\fP *in)"
.br
.ti -1c
.RI "int \fBmulti_address_is_ip6\fP (const struct \fBmulti_address\fP *in)"
.br
.ti -1c
.RI "int \fBmulti_address_get_ip_family\fP (const struct \fBmulti_address\fP *in)"
.br
.ti -1c
.RI "int \fBmulti_address_get_ip_address\fP (const struct \fBmulti_address\fP *in, char *ip)"
.br
.ti -1c
.RI "int \fBmulti_address_get_ip_port\fP (const struct \fBmulti_address\fP *in)"
.br
.ti -1c
.RI "char * \fBmulti_address_get_peer_id\fP (const struct \fBmulti_address\fP *in)"
.br
.RI "Pulls the peer ID out of a \fBmulti_address\fP struct\&. "
.ti -1c
.RI "int \fBmulti_address_compare\fP (const struct \fBmulti_address\fP *a, const struct \fBmulti_address\fP *b)"
.br
.RI "Check to see how these two addresses compare\&. "
.ti -1c
.RI "int \fBmulti_address_compare_id\fP (const struct \fBmulti_address\fP *a, const struct \fBmulti_address\fP *b)"
.br
.RI "Check to see how these two addresses compare, ignoring IP address, only\&. "
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "\fBmulti_addr_t\fP"

.PP
a structure composing a multiaddress 
.SH "Function Documentation"
.PP 
.SS "int multi_address_compare (const struct \fBmulti_address\fP * a, const struct \fBmulti_address\fP * b)"

.PP
Check to see how these two addresses compare\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP side A 
.br
\fIb\fP side B 
.RE
.PP
\fBReturns\fP
.RS 4
<0 if B > A; >0 if A > B; 0 if A == B
.RE
.PP
Check to see how these two addresses compare 
.PP
\fBParameters\fP
.RS 4
\fIa\fP side A 
.br
\fIb\fP side B 
.RE
.PP
\fBReturns\fP
.RS 4
<0 if B > A; >0 if A > B; 0 if A == B 
.RE
.PP

.PP
Definition at line 345 of file multiaddr\&.c\&.
.SS "int multi_address_compare_id (const struct \fBmulti_address\fP * a, const struct \fBmulti_address\fP * b)"

.PP
Check to see how these two addresses compare, ignoring IP address, only\&. looking at ID hash 
.PP
\fBParameters\fP
.RS 4
\fIa\fP side A 
.br
\fIb\fP side B 
.RE
.PP
\fBReturns\fP
.RS 4
<0 if B > A; >0 if A > B; 0 if A == B
.RE
.PP
Check to see how these two addresses compare, ignoring IP address, only looking at the first /ipfs/ID hash 
.PP
\fBParameters\fP
.RS 4
\fIa\fP side A 
.br
\fIb\fP side B 
.RE
.PP
\fBReturns\fP
.RS 4
<0 if B > A; >0 if A > B; 0 if A == B 
.RE
.PP

.PP
Definition at line 371 of file multiaddr\&.c\&.
.SS "struct \fBmulti_address\fP* multi_address_copy (const struct \fBmulti_address\fP * in)"
Copy a \fBmulti_address\fP from one memory location to another 
.PP
\fBParameters\fP
.RS 4
\fIin\fP the source 
.RE
.PP
\fBReturns\fP
.RS 4
the new struct \fBmulti_address\fP or NULL if there was a problem (i\&.e\&. out of memory) 
.RE
.PP

.PP
Definition at line 209 of file multiaddr\&.c\&.
.SS "int multi_address_decapsulate (struct \fBmulti_address\fP * result, char * srci)"
Find scri and remove it from the resultant value (ie /ip4/127\&.0\&.0\&.1/tcp/4001 becomes ip4/127\&.0\&.0\&.1 when you call decapsulate(addr, '/tcp') 
.PP
\fBParameters\fP
.RS 4
\fIresult\fP the address to work with 
.br
\fIsrci\fP the string to look for 
.RE
.PP

.PP
Definition at line 292 of file multiaddr\&.c\&.
.SS "int multi_address_encapsulate (struct \fBmulti_address\fP * result, char * string)"
Put a string into the \fBmulti_address\fP and recalculate the bytes 
.PP
\fBParameters\fP
.RS 4
\fIresult\fP the struct 
.br
\fIstring\fP the new string 
.RE
.PP

.PP
Definition at line 243 of file multiaddr\&.c\&.
.SS "void multi_address_free (struct \fBmulti_address\fP * in)"

.PP
Definition at line 192 of file multiaddr\&.c\&.
.SS "int multi_address_get_ip_address (const struct \fBmulti_address\fP * in, char * ip)"

.PP
Definition at line 122 of file multiaddr\&.c\&.
.SS "int multi_address_get_ip_family (const struct \fBmulti_address\fP * in)"

.PP
Definition at line 108 of file multiaddr\&.c\&.
.SS "int multi_address_get_ip_port (const struct \fBmulti_address\fP * in)"

.PP
Definition at line 150 of file multiaddr\&.c\&.
.SS "char* multi_address_get_peer_id (const struct \fBmulti_address\fP * in)"

.PP
Pulls the peer ID out of a \fBmulti_address\fP struct\&. 
.PP
\fBParameters\fP
.RS 4
\fIin\fP the \fBmulti_address\fP 
.RE
.PP
\fBReturns\fP
.RS 4
the peer id string, or NULL NOTE: This allocates memory that needs to be freed 
.RE
.PP

.PP
Definition at line 167 of file multiaddr\&.c\&.
.SS "int multi_address_is_ip (const struct \fBmulti_address\fP * in)"

.PP
Definition at line 89 of file multiaddr\&.c\&.
.SS "int multi_address_is_ip4 (const struct \fBmulti_address\fP * in)"

.PP
Definition at line 100 of file multiaddr\&.c\&.
.SS "int multi_address_is_ip6 (const struct \fBmulti_address\fP * in)"

.PP
Definition at line 104 of file multiaddr\&.c\&.
.SS "struct \fBmulti_address\fP* multi_address_new_from_bytes (const uint8_t * byteaddress, int size)"
construct a new \fBmulti_address\fP from bytes 
.PP
\fBParameters\fP
.RS 4
\fIbyteaddress\fP the byte array 
.br
\fIsize\fP the size of the byte array 
.RE
.PP
\fBReturns\fP
.RS 4
a new \fBmulti_address\fP struct filled in, or NULL on error 
.RE
.PP
\fBWarning\fP
.RS 4
this currently is failing tests 
.RE
.PP

.PP
Definition at line 44 of file multiaddr\&.c\&.
.SS "struct \fBmulti_address\fP* multi_address_new_from_string (const char * straddress)"

.PP
Definition at line 69 of file multiaddr\&.c\&.
.SS "int strpos (char * haystack, char * needle)"

.PP
Definition at line 11 of file multiaddr\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for libcp2p from the source code\&.
