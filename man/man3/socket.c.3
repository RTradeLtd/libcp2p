.TH "/media/solidity/DATA/Code/RTradeLtd/libcp2p/src/network/socket.c" 3 "Tue Jul 21 2020" "c-template" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/media/solidity/DATA/Code/RTradeLtd/libcp2p/src/network/socket.c \- general socket related tooling  

.SH SYNOPSIS
.br
.PP
\fC#include <arpa/inet\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <netdb\&.h>\fP
.br
\fC#include <netinet/in\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <sys/socket\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include 'network/socket\&.h'\fP
.br
\fC#include 'utils/logger\&.h'\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br
\fC#include <signal\&.h>\fP
.br
\fC#include <stdbool\&.h>\fP
.br
\fC#include <sys/time\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBget_new_socket\fP (\fBthread_logger\fP *thl, \fBaddr_info\fP *bind_address, \fBSOCKET_OPTS\fP sock_opts[], int num_opts, bool is_client)"
.br
.RI "gets an available socket attached to bind_address "
.ti -1c
.RI "bool \fBset_socket_blocking_status\fP (int fd, bool blocking)"
.br
.RI "used to enable/disable blocking sockets "
.ti -1c
.RI "char * \fBget_name_info\fP (\fBaddr_info\fP *client_address)"
.br
.RI "returns the address the client is connecting from "
.ti -1c
.RI "\fBaddr_info\fP \fBdefault_hints\fP ()"
.br
.RI "generates an addr_info struct with defaults defaults is IPv4, TCP, and AI_PASSIVE flags "
.in -1c
.SH "Detailed Description"
.PP 
general socket related tooling 


.PP
Definition in file \fBsocket\&.c\fP\&.
.SH "Function Documentation"
.PP 
.SS "\fBaddr_info\fP default_hints ()"

.PP
generates an addr_info struct with defaults defaults is IPv4, TCP, and AI_PASSIVE flags 
.PP
Definition at line 139 of file socket\&.c\&.
.SS "char* get_name_info (\fBaddr_info\fP * client_address)"

.PP
returns the address the client is connecting from 
.PP
Definition at line 115 of file socket\&.c\&.
.SS "int get_new_socket (\fBthread_logger\fP * thl, \fBaddr_info\fP * bind_address, \fBSOCKET_OPTS\fP sock_opts[], int num_opts, bool is_client)"

.PP
gets an available socket attached to bind_address 
.PP
\fBReturns\fP
.RS 4
Success: file descriptor socket number greater than 0 
.PP
Failure: -1 initializers a socket attached to bind_address with sock_opts, and binds the address 
.RE
.PP

.PP
Definition at line 31 of file socket\&.c\&.
.SS "bool set_socket_blocking_status (int fd, bool blocking)"

.PP
used to enable/disable blocking sockets 
.PP
\fBReturns\fP
.RS 4
Failure: false 
.PP
Success: true 
.RE
.PP
\fBNote\fP
.RS 4
see https://stackoverflow.com/questions/1543466/how-do-i-change-a-tcp-socket-to-be-non-blocking/1549344#1549344 
.RE
.PP

.PP
Definition at line 100 of file socket\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for c-template from the source code\&.
