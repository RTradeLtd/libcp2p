.TH "/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/crypto/key.h" 3 "Fri Jul 24 2020" "libcp2p" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/crypto/key.h \- public/private key management functions  

.SH SYNOPSIS
.br
.PP
\fC#include 'encoding/cbor\&.h'\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBpublic_key\fP"
.br
.ti -1c
.RI "struct \fBprivate_key\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBpublic_key\fP \fBpublic_key_t\fP"
.br
.RI "a structure containing information needed for using a public key "
.ti -1c
.RI "typedef struct \fBprivate_key\fP \fBprivate_key_t\fP"
.br
.RI "a structure containing information needed for using a private key "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBkey_type_t\fP { \fBKEYTYPE_INVALID\fP, \fBKEYTYPE_ECDSA\fP }"
.br
.RI "denotes the type of key "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBpublic_key_t\fP * \fBlibp2p_crypto_public_key_new\fP (void)"
.br
.RI "the size of the key data "
.ti -1c
.RI "void \fBlibp2p_crypto_public_key_free\fP (\fBpublic_key_t\fP *in)"
.br
.RI "free up resources associated with a public_key_t instance "
.ti -1c
.RI "\fBprivate_key_t\fP * \fBlibp2p_crypto_private_key_new\fP (void)"
.br
.RI "returns a new instance of private_key_t "
.ti -1c
.RI "void \fBlibp2p_crypto_private_key_free\fP (\fBprivate_key_t\fP *in)"
.br
.RI "frees up resources associated with a private_key_t instance "
.ti -1c
.RI "int \fBlibp2p_crypto_private_key_copy\fP (const \fBprivate_key_t\fP *source, \fBprivate_key_t\fP *destination)"
.br
.RI "copies a private key "
.ti -1c
.RI "\fBpublic_key_t\fP * \fBlibp2p_crypto_public_key_cbor_decode\fP (\fBcbor_encoded_data_t\fP *data)"
.br
.RI "used to cbor data a chunk of data "
.ti -1c
.RI "\fBcbor_encoded_data_t\fP * \fBlibp2p_crypto_public_key_cbor_encode\fP (\fBpublic_key_t\fP *pub_key)"
.br
.RI "used to cbor encode a public_key_t type for sending over the wire "
.in -1c
.SH "Detailed Description"
.PP 
public/private key management functions 

provides tooling for working with public/private keys and transmitting them over the wire 
.PP
\fBWarning\fP
.RS 4
none of these functions and structures are thread safe 
.RE
.PP

.PP
Definition in file \fBkey\&.h\fP\&.
.SH "Typedef Documentation"
.PP 
.SS "\fBprivate_key_t\fP"

.PP
a structure containing information needed for using a private key 
.SS "\fBpublic_key_t\fP"

.PP
a structure containing information needed for using a public key 
.PP
\fBNote\fP
.RS 4
to send over the wire use libp2p_crypto_public_key_cbor_encode
.RE
.PP
CBOR wire representation is \fCarray[type, data, size]\fP 
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBkey_type_t\fP"

.PP
denotes the type of key indicates the type of cryptography used with the key 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIKEYTYPE_INVALID \fP\fP
.TP
\fB\fIKEYTYPE_ECDSA \fP\fP
.PP
Definition at line 31 of file key\&.h\&.
.SH "Function Documentation"
.PP 
.SS "int libp2p_crypto_private_key_copy (const \fBprivate_key_t\fP * source, \fBprivate_key_t\fP * destination)"

.PP
copies a private key 
.PP
\fBParameters\fP
.RS 4
\fIsource\fP the key we are copying 
.br
\fIdestination\fP the location to copy to 
.RE
.PP
\fBReturns\fP
.RS 4
Success: 0 
.PP
Failure: 1 
.RE
.PP
\fBNote\fP
.RS 4
does not allocate memory for caller 
.RE
.PP

.PP
Definition at line 89 of file key\&.c\&.
.SS "void libp2p_crypto_private_key_free (\fBprivate_key_t\fP * in)"

.PP
frees up resources associated with a private_key_t instance 
.PP
Definition at line 72 of file key\&.c\&.
.SS "\fBprivate_key_t\fP* libp2p_crypto_private_key_new (void)"

.PP
returns a new instance of private_key_t 
.PP
\fBReturns\fP
.RS 4
Success: pointer to an instance of private_key_t 
.PP
Failure: NULL pointer 
.RE
.PP

.PP
Definition at line 59 of file key\&.c\&.
.SS "\fBpublic_key_t\fP* libp2p_crypto_public_key_cbor_decode (\fBcbor_encoded_data_t\fP * data)"

.PP
used to cbor data a chunk of data 
.PP
\fBParameters\fP
.RS 4
\fIdata\fP an instance of cbor_encoded_data_t created with libp2p_crypto_public_key_cbor_encode 
.RE
.PP
\fBReturns\fP
.RS 4
Success: pointer to a public_key_t instance 
.PP
Failure: NULL pointer 
.RE
.PP

.PP
Definition at line 111 of file key\&.c\&.
.SS "\fBcbor_encoded_data_t\fP* libp2p_crypto_public_key_cbor_encode (\fBpublic_key_t\fP * pub_key)"

.PP
used to cbor encode a public_key_t type for sending over the wire 
.PP
\fBParameters\fP
.RS 4
\fIpub_key\fP an instance of public_key_t fully filled out 
.br
\fIbytes_written\fP returns the number of bytes written 
.RE
.PP
\fBReturns\fP
.RS 4
Success: pointer to an instance of cbor_encoded_data_t 
.PP
Failure: NULL pointer 
.RE
.PP

.PP
\fBTodo\fP
.RS 4
figure out why this returns an error 
.RE
.PP

.PP
Definition at line 220 of file key\&.c\&.
.SS "void libp2p_crypto_public_key_free (\fBpublic_key_t\fP * in)"

.PP
free up resources associated with a public_key_t instance 
.PP
Definition at line 49 of file key\&.c\&.
.SS "\fBpublic_key_t\fP* libp2p_crypto_public_key_new (void)"

.PP
the size of the key data returns a new instance of public_key_t 
.PP
\fBReturns\fP
.RS 4
Success: pointer to an instance of public_key_t 
.PP
Failure: NULL pointer
.RE
.PP
the size of the key data
.PP
\fBReturns\fP
.RS 4
Success: pointer to an instance of public_key_t 
.PP
Failure: NULL pointer 
.RE
.PP

.PP
Definition at line 36 of file key\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for libcp2p from the source code\&.
