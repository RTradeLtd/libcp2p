.TH "/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/crypto/ephemeral.h" 3 "Thu Aug 6 2020" "libcp2p" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/crypto/ephemeral.h
.SH SYNOPSIS
.br
.PP
\fC#include 'mbedtls/ecdh\&.h'\fP
.br
\fC#include <stdint\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBStretchedKey\fP"
.br
.ti -1c
.RI "struct \fBEphemeralPublicKey\fP"
.br
.ti -1c
.RI "struct \fBEphemeralPrivateKey\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBlibp2p_crypto_ephemeral_keypair_generate\fP (char *curve, struct \fBEphemeralPrivateKey\fP **\fBprivate_key\fP)"
.br
.RI "Generate a Ephemeral Public Key as well as a shared key\&. "
.ti -1c
.RI "int \fBlibp2p_crypto_ephemeral_generate_shared_secret\fP (struct \fBEphemeralPrivateKey\fP *\fBprivate_key\fP, const unsigned char *remote_public_key, size_t remote_public_key_size)"
.br
.RI "Generate a shared secret\&. "
.ti -1c
.RI "void \fBlibp2p_crypto_ephemeral_key_free\fP (struct \fBEphemeralPrivateKey\fP *in)"
.br
.ti -1c
.RI "struct \fBStretchedKey\fP * \fBlibp2p_crypto_ephemeral_stretched_key_new\fP (void)"
.br
.RI "Routines to help with the \fBStretchedKey\fP struct\&. "
.ti -1c
.RI "void \fBlibp2p_crypto_ephemeral_stretched_key_free\fP (struct \fBStretchedKey\fP *in)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int libp2p_crypto_ephemeral_generate_shared_secret (struct \fBEphemeralPrivateKey\fP * private_key, const unsigned char * remote_public_key, size_t remote_public_key_size)"

.PP
Generate a shared secret\&. 
.PP
\fBParameters\fP
.RS 4
\fI\fBprivate_key\fP\fP the context, also where it puts the shared secret 
.br
\fIremote_public_key\fP the key the remote gave us 
.br
\fIremote_public_key_size\fP the size of the remote public key @reutrns true(1) on success, otherwise false(0)
.RE
.PP
Generate a shared secret 
.PP
\fBParameters\fP
.RS 4
\fI\fBprivate_key\fP\fP the context, also where it puts the shared secret 
.br
\fIremote_public_key\fP the key the remote gave us 
.br
\fIremote_public_key_size\fP the size of the remote public key @reutrns true(1) on success, otherwise false(0) 
.RE
.PP

.PP
Definition at line 238 of file ephemeral\&.c\&.
.SS "void libp2p_crypto_ephemeral_key_free (struct \fBEphemeralPrivateKey\fP * in)"

.PP
Definition at line 62 of file ephemeral\&.c\&.
.SS "int libp2p_crypto_ephemeral_keypair_generate (char * curve, struct \fBEphemeralPrivateKey\fP ** private_key_ptr)"

.PP
Generate a Ephemeral Public Key as well as a shared key\&. 
.PP
\fBParameters\fP
.RS 4
\fIcurve\fP the curve to use (P-256, P-384, or P-521) 
.br
\fI\fBprivate_key\fP\fP where to store the private key @reutrns true(1) on success, otherwise false(0)
.RE
.PP
Generate a Ephemeral keypair 
.PP
\fBParameters\fP
.RS 4
\fIcurve\fP the curve to use (P-256, P-384, or P-521) 
.br
\fI\fBprivate_key\fP\fP the struct to store the generated key 
.RE
.PP
\fBReturns\fP
.RS 4
true(1) on success, otherwise false(0) 
.RE
.PP

.PP
Definition at line 158 of file ephemeral\&.c\&.
.SS "void libp2p_crypto_ephemeral_stretched_key_free (struct \fBStretchedKey\fP * in)"

.PP
Definition at line 26 of file ephemeral\&.c\&.
.SS "struct \fBStretchedKey\fP* libp2p_crypto_ephemeral_stretched_key_new (void)"

.PP
Routines to help with the \fBStretchedKey\fP struct\&. 
.PP
Definition at line 12 of file ephemeral\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for libcp2p from the source code\&.
