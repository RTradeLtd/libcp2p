.TH "/media/solidity/DATA/Code/RTradeLtd/libcp2p/src/network/socket_test.c" 3 "Thu Aug 6 2020" "libcp2p" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/media/solidity/DATA/Code/RTradeLtd/libcp2p/src/network/socket_test.c
.SH SYNOPSIS
.br
.PP
\fC#include 'encoding/cbor\&.h'\fP
.br
\fC#include 'testutils/testutils\&.h'\fP
.br
\fC#include 'thirdparty/logger/logger\&.h'\fP
.br
\fC#include 'network/messages\&.h'\fP
.br
\fC#include 'network/socket_server\&.h'\fP
.br
\fC#include 'multiaddr/multiaddr\&.h'\fP
.br
\fC#include <arpa/inet\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <netdb\&.h>\fP
.br
\fC#include <netinet/in\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br
\fC#include <signal\&.h>\fP
.br
\fC#include <stdbool\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <sys/socket\&.h>\fP
.br
\fC#include <sys/time\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <stdarg\&.h>\fP
.br
\fC#include <stddef\&.h>\fP
.br
\fC#include <setjmp\&.h>\fP
.br
\fC#include <cmocka\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBstart_socker_server_wrapper\fP (void *data)"
.br
.ti -1c
.RI "void \fBtest_new_socket_server\fP (void **state)"
.br
.RI "in this we reuse the thread pool to start the socket server listening process, but you will likely want to do this from your main thread "
.ti -1c
.RI "void \fBtest_cbor_message_t_encoding\fP (void **state)"
.br
.ti -1c
.RI "void \fBtest_cbor_message_hello_t_encoding\fP (void **state)"
.br
.ti -1c
.RI "int \fBmain\fP (void)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int main (void)"

.PP
Definition at line 270 of file socket_test\&.c\&.
.SS "void start_socker_server_wrapper (void * data)"

.PP
Definition at line 44 of file socket_test\&.c\&.
.SS "void test_cbor_message_hello_t_encoding (void ** state)"

.PP
Definition at line 201 of file socket_test\&.c\&.
.SS "void test_cbor_message_t_encoding (void ** state)"

.PP
Definition at line 152 of file socket_test\&.c\&.
.SS "void test_new_socket_server (void ** state)"

.PP
in this we reuse the thread pool to start the socket server listening process, but you will likely want to do this from your main thread 
.PP
\fBWarning\fP
.RS 4
this test is currently leaking about 24 bytes likely because we are using two thread pools which rely on some sort of global stuff 
.RE
.PP

.PP
Definition at line 53 of file socket_test\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for libcp2p from the source code\&.
