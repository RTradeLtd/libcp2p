.TH "/media/solidity/DATA/Code/RTradeLtd/libcp2p/src/utils/thread_pool.c" 3 "Fri Jul 24 2020" "libcp2p" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/media/solidity/DATA/Code/RTradeLtd/libcp2p/src/utils/thread_pool.c
.SH SYNOPSIS
.br
.PP
\fC#include <errno\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br
\fC#include <signal\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <time\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include 'utils/thread_pool\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBbsem\fP"
.br
.ti -1c
.RI "struct \fBjob\fP"
.br
.ti -1c
.RI "struct \fBjobqueue\fP"
.br
.ti -1c
.RI "struct \fBthread\fP"
.br
.ti -1c
.RI "struct \fBthpool_\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBTHPOOL_DEBUG\fP   0"
.br
.ti -1c
.RI "#define \fBerr\fP(str)   fprintf(stderr, str)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBbsem\fP \fBbsem\fP"
.br
.ti -1c
.RI "typedef struct \fBjob\fP \fBjob\fP"
.br
.ti -1c
.RI "typedef struct \fBjobqueue\fP \fBjobqueue\fP"
.br
.ti -1c
.RI "typedef struct \fBthread\fP \fBthread\fP"
.br
.ti -1c
.RI "typedef struct \fBthpool_\fP \fBthpool_\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static int \fBthread_init\fP (\fBthpool_\fP *thpool_p, struct \fBthread\fP **thread_p, int id)"
.br
.ti -1c
.RI "static void * \fBthread_do\fP (struct \fBthread\fP *thread_p)"
.br
.ti -1c
.RI "static void \fBthread_hold\fP (int sig_id)"
.br
.ti -1c
.RI "static void \fBthread_destroy\fP (struct \fBthread\fP *thread_p)"
.br
.ti -1c
.RI "static int \fBjobqueue_init\fP (\fBjobqueue\fP *jobqueue_p)"
.br
.ti -1c
.RI "static void \fBjobqueue_clear\fP (\fBjobqueue\fP *jobqueue_p)"
.br
.ti -1c
.RI "static void \fBjobqueue_push\fP (\fBjobqueue\fP *jobqueue_p, struct \fBjob\fP *newjob_p)"
.br
.ti -1c
.RI "static struct \fBjob\fP * \fBjobqueue_pull\fP (\fBjobqueue\fP *jobqueue_p)"
.br
.ti -1c
.RI "static void \fBjobqueue_destroy\fP (\fBjobqueue\fP *jobqueue_p)"
.br
.ti -1c
.RI "static void \fBbsem_init\fP (struct \fBbsem\fP *bsem_p, int value)"
.br
.ti -1c
.RI "static void \fBbsem_reset\fP (struct \fBbsem\fP *bsem_p)"
.br
.ti -1c
.RI "static void \fBbsem_post\fP (struct \fBbsem\fP *bsem_p)"
.br
.ti -1c
.RI "static void \fBbsem_post_all\fP (struct \fBbsem\fP *bsem_p)"
.br
.ti -1c
.RI "static void \fBbsem_wait\fP (struct \fBbsem\fP *bsem_p)"
.br
.ti -1c
.RI "struct \fBthpool_\fP * \fBthpool_init\fP (int num_threads)"
.br
.ti -1c
.RI "int \fBthpool_add_work\fP (\fBthpool_\fP *thpool_p, void(*function_p)(void *), void *arg_p)"
.br
.ti -1c
.RI "void \fBthpool_wait\fP (\fBthpool_\fP *thpool_p)"
.br
.ti -1c
.RI "void \fBthpool_destroy\fP (\fBthpool_\fP *thpool_p)"
.br
.ti -1c
.RI "void \fBthpool_pause\fP (\fBthpool_\fP *thpool_p)"
.br
.ti -1c
.RI "void \fBthpool_resume\fP (\fBthpool_\fP *thpool_p)"
.br
.ti -1c
.RI "int \fBthpool_num_threads_working\fP (\fBthpool_\fP *thpool_p)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "static volatile int \fBthreads_keepalive\fP"
.br
.ti -1c
.RI "static volatile int \fBthreads_on_hold\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define err(str)   fprintf(stderr, str)"

.PP
Definition at line 37 of file thread_pool\&.c\&.
.SS "#define THPOOL_DEBUG   0"

.PP
\fBNote\fP
.RS 4
not needed as we define in cmake 
.RE
.PP

.PP
Definition at line 33 of file thread_pool\&.c\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBbsem\fP \fBbsem\fP"

.SS "typedef struct \fBjob\fP \fBjob\fP"

.SS "typedef struct \fBjobqueue\fP \fBjobqueue\fP"

.SS "typedef struct \fBthpool_\fP \fBthpool_\fP"

.SS "typedef struct \fBthread\fP \fBthread\fP"

.SH "Function Documentation"
.PP 
.SS "static void bsem_init (struct \fBbsem\fP * bsem_p, int value)\fC [static]\fP"

.PP
Definition at line 465 of file thread_pool\&.c\&.
.SS "static void bsem_post (struct \fBbsem\fP * bsem_p)\fC [static]\fP"

.PP
Definition at line 481 of file thread_pool\&.c\&.
.SS "static void bsem_post_all (struct \fBbsem\fP * bsem_p)\fC [static]\fP"

.PP
Definition at line 489 of file thread_pool\&.c\&.
.SS "static void bsem_reset (struct \fBbsem\fP * bsem_p)\fC [static]\fP"

.PP
Definition at line 476 of file thread_pool\&.c\&.
.SS "static void bsem_wait (struct \fBbsem\fP * bsem_p)\fC [static]\fP"

.PP
Definition at line 497 of file thread_pool\&.c\&.
.SS "static void jobqueue_clear (\fBjobqueue\fP * jobqueue_p)\fC [static]\fP"

.PP
Definition at line 390 of file thread_pool\&.c\&.
.SS "static void jobqueue_destroy (\fBjobqueue\fP * jobqueue_p)\fC [static]\fP"

.PP
Definition at line 457 of file thread_pool\&.c\&.
.SS "static int jobqueue_init (\fBjobqueue\fP * jobqueue_p)\fC [static]\fP"

.PP
Definition at line 373 of file thread_pool\&.c\&.
.SS "static struct \fBjob\fP * jobqueue_pull (\fBjobqueue\fP * jobqueue_p)\fC [static]\fP"

.PP
Definition at line 429 of file thread_pool\&.c\&.
.SS "static void jobqueue_push (\fBjobqueue\fP * jobqueue_p, struct \fBjob\fP * newjob_p)\fC [static]\fP"

.PP
Definition at line 404 of file thread_pool\&.c\&.
.SS "int thpool_add_work (\fBthpool_\fP * thpool_p, void(*)(void *) function_p, void * arg_p)"

.PP
\fBExamples\fP
.in +1c
\fB/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/utils/thread_pool\&.h\fP\&.
.PP
Definition at line 165 of file thread_pool\&.c\&.
.SS "void thpool_destroy (\fBthpool_\fP * thpool_p)"

.PP
\fBExamples\fP
.in +1c
\fB/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/utils/thread_pool\&.h\fP\&.
.PP
Definition at line 194 of file thread_pool\&.c\&.
.SS "struct \fBthpool_\fP* thpool_init (int num_threads)"

.PP
\fBExamples\fP
.in +1c
\fB/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/utils/thread_pool\&.h\fP\&.
.PP
Definition at line 109 of file thread_pool\&.c\&.
.SS "int thpool_num_threads_working (\fBthpool_\fP * thpool_p)"

.PP
\fBExamples\fP
.in +1c
\fB/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/utils/thread_pool\&.h\fP\&.
.PP
Definition at line 250 of file thread_pool\&.c\&.
.SS "void thpool_pause (\fBthpool_\fP * thpool_p)"

.PP
\fBExamples\fP
.in +1c
\fB/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/utils/thread_pool\&.h\fP\&.
.PP
Definition at line 233 of file thread_pool\&.c\&.
.SS "void thpool_resume (\fBthpool_\fP * thpool_p)"

.PP
\fBExamples\fP
.in +1c
\fB/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/utils/thread_pool\&.h\fP\&.
.PP
Definition at line 241 of file thread_pool\&.c\&.
.SS "void thpool_wait (\fBthpool_\fP * thpool_p)"

.PP
\fBExamples\fP
.in +1c
\fB/media/solidity/DATA/Code/RTradeLtd/libcp2p/include/utils/thread_pool\&.h\fP\&.
.PP
Definition at line 185 of file thread_pool\&.c\&.
.SS "static void thread_destroy (struct \fBthread\fP * thread_p)\fC [static]\fP"

.PP
Definition at line 366 of file thread_pool\&.c\&.
.SS "static void * thread_do (struct \fBthread\fP * thread_p)\fC [static]\fP"

.PP
Definition at line 296 of file thread_pool\&.c\&.
.SS "static void thread_hold (int sig_id)\fC [static]\fP"

.PP
Definition at line 280 of file thread_pool\&.c\&.
.SS "static int thread_init (\fBthpool_\fP * thpool_p, struct \fBthread\fP ** thread_p, int id)\fC [static]\fP"

.PP
Definition at line 262 of file thread_pool\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "volatile int threads_keepalive\fC [static]\fP"

.PP
Definition at line 42 of file thread_pool\&.c\&.
.SS "volatile int threads_on_hold\fC [static]\fP"

.PP
Definition at line 43 of file thread_pool\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for libcp2p from the source code\&.
